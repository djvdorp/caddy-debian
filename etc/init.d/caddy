#!/bin/sh
### BEGIN INIT INFO
# Provides:          caddy
# Required-Start:    $local_fs $network $named $time $syslog
# Required-Stop:     $local_fs $network $named $time $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the caddy web server
# Description:       starts the caddy web server
### END INIT INFO

NAME=caddy
DESC=caddy
CADDYBIN=$(which caddy)
PIDFILE=/var/run/$NAME.pid

RUNAS=caddy
LOGFILE=/var/log/$NAME.log
CONFIGFILE=/etc/caddy/Caddyfile
WEBROOT=/var/tmp
PORT=2015

DAEMON="$CADDYBIN -agree=true -log=$LOGFILE -conf=$CONFIGFILE -root=$WEBROOT -pidfile=$PIDFILE -port=$PORT"

CADDYHOME=/etc/caddy/ssl
export HOME=$CADDYHOME

setcap cap_net_bind_service=+ep $CADDYBIN
ulimit -n 8192


start() {
  printf "%-50s" "Starting $NAME..."
  if [ -f $PIDFILE ] && kill -0 $(cat $PIDFILE); then
    echo 'Service already running' >&2
    return 1
  fi
  if [ ! -f $LOGFILE ]; then
    touch $LOGFILE
    chown $RUNAS $LOGFILE
  fi
  local CMD="$DAEMON &> \"$LOGFILE\" & echo \$!"
  su -c "$CMD" $RUNAS > "$PIDFILE"
  echo 'Service started' >&2
}

status() {
  printf "%-50s" "Checking $NAME..."
  if [ -f $PIDFILE ]; then
      PID=`cat $PIDFILE`
      if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
          printf "%s\n" "Process dead but pidfile exists"
      else
          echo "Running"
      fi
  else
      printf "%s\n" "Service not running"
  fi
}

stop() {
  printf "%-50s" "Stopping $NAME"
  if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
    echo 'Service not running' >&2
    return 1
  fi
  kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
  echo 'Service stopped' >&2
}

case "$1" in
  start)
    start
    ;;
  status)
    status
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status}"
esac
